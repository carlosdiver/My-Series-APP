{"version":3,"sources":["Header.js","Footer.js","Genres.js","Series.js","NewGenres.js","NewSerie.js","InfoSerie.js","EditGenre.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","open","setOpen","Navbar","color","light","expand","className","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Footer","Genres","data","setData","useEffect","axios","get","then","res","length","role","scope","map","record","key","id","name","delete","filtered","filter","item","Series","style","marginBottom","alt","src","poster","status","Badge","genre","NewGenres","setName","success","setSuccess","htmlFor","type","value","onChange","evt","target","placeholder","post","NewSerie","match","form","setForm","genres","setGenres","genreId","setGenreId","params","encontrado","find","field","seleciona","minHeight","comments","checked","alert","InfoSerie","mode","setMode","mainHeader","height","backgroundImage","background","backgroundSize","backgroundPosition","backgroundRepeat","marginTop","put","genre_id","EditGenre","homeCover","opacity","Home","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50cebf6a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Collapse, Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarToggler\r\n} from 'reactstrap'\r\n\r\nconst Header = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const toggle = () => {\r\n    setOpen(!open)\r\n  }\r\n  return (\r\n    <Navbar color='light' light expand='md' className='fixed-top'>\r\n      <div className='container'>\r\n        <NavbarBrand tag={Link} to='/'>My Series App</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={open} navbar>\r\n          <Nav className='ml-auto' navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='/' >Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='/series' >Séries</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='/genres' >Gêneros</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='/serie/new' >Nova Série</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='/genres/new' >Novo Gênero</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </div>\r\n    </Navbar>\r\n  )\r\n}\r\nexport default Header","import React from 'react'\r\nimport {\r\n  Navbar\r\n} from 'reactstrap'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    \r\n    <Navbar color='light' light expand='md' className='fixed-bottom'>\r\n    <div className='mx-auto'>\r\n        <h5 className='mt-2 text-secondary'>My Series App</h5>\r\n        <p className='mb-4 small text-secondary text-center'>All rights reserved &copy;</p>\r\n      </div>\r\n    </Navbar>\r\n  )\r\n}\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Genres = () => {\r\n  //Carregar todos os gêneros\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    axios.get('./api/genres').then(res => {\r\n      setData(res.data.data)\r\n    })\r\n  }, [])\r\n\r\n  //Deletar gênero\r\n  const deleteGenero = id => {\r\n    axios.delete('/api/genres/' + id)\r\n      .then(res => {\r\n        const filtered = data.filter(item => item.id !== id)\r\n        setData(filtered)\r\n      })\r\n  }\r\n\r\n  //Para cada resultado de gênero, renderiza uma linha com o resultado\r\n  const renderLine = record => {\r\n    return (\r\n      <tr key={record.id}>\r\n        <th scope='row'>{record.id}</th>\r\n        <td>{record.name}</td>\r\n        <td>\r\n          <button className='btn btn-danger mr-3' onClick={() => deleteGenero(record.id)}>Remover</button>\r\n          <Link to={'/genres/' + record.id} className='btn btn-warning'>Editar</Link>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className='container'>\r\n        <h1>Gêneros</h1>\r\n        <Link to='/genres/new' className='btn btn-primary'>Cadastrar novo gênero</Link>\r\n        <div className='alert text-center center alert-warning' role='alert'>\r\n          Não existem gêneros cadastrados.\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='container col-sm-8 col-lg-5 mb-5 pb-5'>\r\n      <h1 className='mt-3 text-secondary pt-5'>Gêneros</h1>\r\n      <Link to='/genres/new' className='btn btn-primary mb-3'>Cadastrar novo gênero</Link>\r\n      <table className='table table-dark table-hover text-center mb-5 pb-5'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col-3'>Id</th>\r\n            <th scope='col-4 col-md-5'>Gênero</th>\r\n            <th scope='col-5 col-md-4'>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(renderLine)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Genres","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Series = () => {\r\n  //Carregar todos os gêneros\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    axios.get('./api/series').then(res => {\r\n      setData(res.data.data)\r\n    })\r\n  }, [])\r\n\r\n  //Deletar gênero\r\n  const deleteSerie = id => {\r\n      axios.delete('/api/series/' + id)\r\n      .then(res => {\r\n        const filtered = data.filter(item => item.id !== id)\r\n        setData(filtered)\r\n      })\r\n  }\r\n\r\n  //Para cada resultado de gênero, renderiza um post com o resultado\r\n  const renderLine2 = record => {\r\n    return (\r\n      <div key={record.id} className='col-sm-6 col-12 col-lg-3 col-md-4 text-secondary bg-light shadow p-4'>\r\n        <img className='img-fluid rounded' alt={data.name} src={record.poster} />\r\n        <h5 className='pt-2'>{record.name}</h5>\r\n        <div className='row'>\r\n          <div className='col-5 text-left ' >\r\n            <h5>\r\n              {record.status === 'Assistido' && <Badge className='badge-success mr-3'>Assistido</Badge>}\r\n              {record.status === 'Assistindo' && <Badge className='badge-info mr-3'>Assistindo</Badge>}\r\n              {record.status === 'Para assitir' && <Badge className='badge-warning mr-3'>Para assitir</Badge>}\r\n            </h5>\r\n          </div>\r\n          <div className='col-7 text-right'><p className=''>Gênero: {record.genre}</p></div><div className='lead col-12 mb-2' >\r\n            <button className='btn btn-danger mr-3' onClick={() => deleteSerie(record.id)}>Remover</button>\r\n            <Link to={'/series/' + record.id} className='btn btn-warning'>Info</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className='container'>\r\n        <h1>Séries</h1>\r\n        <Link to='/serie/new' className='btn btn-primary mb-3'>Cadastrar nova Série</Link>\r\n        <div className='alert text-center center alert-warning' role='alert'>\r\n          Não existem séries cadastradas.\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='container' style={{ marginBottom: 200 + 'px' }} >\r\n      <h1 className='mt-3 pt-5 text-secondary'>Séries</h1>\r\n      <Link to='/serie/new' className='btn btn-primary mb-3'>Cadastrar nova Série</Link>\r\n      <div className='row col mt-4'>\r\n        {data.map(renderLine2)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst NewGenres = () => {\r\n  const [name, setName] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n  const onChange = evt => {\r\n    setName(evt.target.value)\r\n  }\r\n  const save = () => {\r\n    axios.post('/api/genres', {\r\n      name\r\n    }).then(res => setSuccess(true)\r\n    )\r\n  }\r\n  if (success) {\r\n    return <Redirect to='/genres' />\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      <h1 className='pt-5 mt-3 text-secondary'>Novo Gênero</h1>\r\n      <form>\r\n\r\n        <div className='row'>\r\n          <div className=\"form-group col-6\">\r\n            <label htmlFor='name'>Gênero</label>\r\n            <input type='text' value={name} onChange={onChange} className='form-control' id='name' placeholder='Insira o nome do Gênero' />\r\n          </div>\r\n        </div>\r\n          <button type='button' onClick={save} className='btn btn-primary'>Salvar</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewGenres","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst NewSerie = ({ match }) => {\r\n  const [form, setForm] = useState({\r\n    name: ''\r\n  })\r\n  const [success, setSuccess] = useState(false)\r\n  const [genres, setGenres] = useState([])\r\n  const [genreId, setGenreId] = useState('')\r\n\r\n  const [data, setData] = useState({})\r\n  useEffect(() => {\r\n    axios.get('/api/series/' + match.params.id)\r\n      .then(res => {\r\n        setData(res.data)\r\n        setForm(res.data)\r\n      })\r\n  }, [match.params.id])\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/genres/')\r\n      .then(res => {\r\n        setGenres(res.data.data)\r\n        const genres = res.data.data\r\n        const encontrado = genres.find(value => data.genre === value.name)\r\n        if (encontrado) {\r\n          setGenreId(encontrado.id)\r\n        }\r\n      })\r\n  }, [data])\r\n\r\n  const onChangeGenre = evt => {\r\n    setGenreId(evt.target.value)\r\n  }\r\n\r\n  const onChange = field => evt => {\r\n    setForm({\r\n      ...form,\r\n      [field]: evt.target.value\r\n    })\r\n  }\r\n\r\n  const seleciona = value => () => {\r\n    setForm({\r\n      ...form,\r\n      status: value\r\n    })\r\n  }\r\n\r\n  const save = () => {\r\n    if (form.name && form.comments && form.status && genreId) {\r\n      axios.post('/api/series', {\r\n        ...form,\r\n      }).then(res => setSuccess(true)\r\n      )\r\n    } else {\r\n      return alert('Preencha todos os campos!')\r\n    }\r\n  }\r\n  if (success) {\r\n    return <Redirect to='/series' />\r\n  }\r\n\r\n  const cancel = () => {\r\n    return <Redirect to='/series' />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='container' style={{minHeight: 600 + 'px'}}>\r\n        <h1 className='mt-3 pt-5 text-secondary'>Nova Série</h1>\r\n        <form className='mb-5'>\r\n          <div className='row'>\r\n            <div className=\"form-group col-12  col-md-6\">\r\n              <label htmlFor='name'>Nome:</label>\r\n              <input type='text' value={form.name} onChange={onChange('name')} className='form-control' id='name' placeholder='Nome da Série' />\r\n            </div>\r\n            <div className=\"form-group col-12  col-md-6\">\r\n              <label htmlFor='name'>Comentários:</label>\r\n              <input type='text' value={form.comments} onChange={onChange('comments')} className='form-control' id='name' placeholder='Comentários' />\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='form-group col-12  col-md-4'>\r\n              <label htmlFor='name'>Gênero</label>\r\n              <select className='form-control' onChange={onChangeGenre} value={genreId}>\r\n                {genres.map(genre => <option key={genre.id} value={genre.id}>{genre.name}</option>)}\r\n              </select>\r\n            </div>\r\n            <div className='col-12  col-md-3'>\r\n              <div className='form-check'>\r\n                <input className='form-check-input' type='radio' checked={form.status === 'Assistido'} name='status' id='assistido' value='Assistido' onChange={seleciona('Assistido')} />\r\n                <label className='form-check-label' htmlFor='assistido'>Assistido</label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <input className='form-check-input' type='radio' checked={form.status === 'Assistindo'} name='status' id='assistindo' value='Assistindo' onChange={seleciona('Assistindo')} />\r\n                <label className='form-check-label' htmlFor='assistindo'>Assistindo</label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <input className='form-check-input' type='radio' checked={form.status === 'Para assistir'} name='status' id='paraAssistir' value='Para assistir' onChange={seleciona('Para assistir')} />\r\n                <label className='form-check-label' htmlFor='paraAssistir'>Para assistir</label>\r\n              </div>\r\n            </div>\r\n            <div className='col-md-5 mt-4'>\r\n              <button type='button' onClick={save} className='btn btn-primary mr-3'>Salvar</button>\r\n              <button onClick={cancel} className='btn btn-danger mt-md-0'>Cancelar Edição</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewSerie","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst InfoSerie = ({ match }) => {\r\n  const [form, setForm] = useState({\r\n    name: ''\r\n  })\r\n  const [success, setSuccess] = useState(false)\r\n  const [mode, setMode] = useState('INFO')\r\n  const [genres, setGenres] = useState([])\r\n  const [genreId, setGenreId] = useState('')\r\n\r\n  const [data, setData] = useState({})\r\n  useEffect(() => {\r\n    axios.get('/api/series/' + match.params.id)\r\n      .then(res => {\r\n        setData(res.data)\r\n        setForm(res.data)\r\n      })\r\n  }, [match.params.id])\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/genres/')\r\n      .then(res => {\r\n        setGenres(res.data.data)\r\n        const genres = res.data.data\r\n        const encontrado = genres.find(value => data.genre === value.name)\r\n        if (encontrado) {\r\n          setGenreId(encontrado.id)\r\n        }\r\n      })\r\n  }, [data])\r\n\r\n  //Custon Header\r\n  const mainHeader = {\r\n    height: '50vh',\r\n    minHeight: '500px',\r\n    backgroundImage: `url('${data.background}')`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'top',\r\n    backgroundRepeat: 'no-repeat',\r\n    marginTop: '80px'\r\n  }\r\n\r\n  const onChangeGenre = evt => {\r\n    setGenreId(evt.target.value)\r\n  }\r\n\r\n  const onChange = field => evt => {\r\n    setForm({\r\n      ...form,\r\n      [field]: evt.target.value\r\n    })\r\n  }\r\n\r\n  const seleciona = value => () => {\r\n    setForm({\r\n      ...form,\r\n      status: value\r\n    })\r\n  }\r\n\r\n  const save = () => {\r\n    axios.put('/api/series/' + match.params.id, {\r\n      ...form,\r\n      genre_id: genreId\r\n    })\r\n      .then(res => setSuccess(true)\r\n      )\r\n  }\r\n  if (success) {\r\n    return <Redirect to='/series' />\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: 200 + 'px' }}>\r\n      <header style={mainHeader}>\r\n        <div className='h-100' style={{ background: 'rgba(0,0,0,.7)' }}>\r\n          <div className='h-100 container'>\r\n            <div className='row h-100 align-items-center'>\r\n              <div className='col-8'>\r\n                <h1 className='font-weight-light text-white'>{data.name}</h1>\r\n                <div className='lead text-white'>\r\n                  {data.status === 'Assistido' && <Badge className='mr-3' color='success'>Assistido</Badge>}\r\n                  {data.status === 'Assistindo' && <Badge className='mr-3' color='info'>Assistindo</Badge>}\r\n                  {data.status === 'Para assitir' && <Badge className='mr-3' color='warning'>Para assitir</Badge>}\r\n                  <small>Gênero: {data.genre}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className='container mt-3'>\r\n        {mode === 'INFO' &&\r\n          <div className='row'>\r\n            <div className='col-12 col-sm-6'>\r\n              <h1 className='mt-3 text-secondary'>{data.name}</h1>\r\n              <h3 className='mt-3 text-secondary'>{data.comments}</h3>\r\n              <div className='mt-4'>\r\n                <button onClick={() => setMode('EDIT')} className='btn btn-success mb-3 mb-sm-0 float-left'>Editar</button>\r\n                <div className='col-7 float-left text-right'><Link to={'/series'} className='btn btn-primary'>Voltar para séries</Link></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-6 d-none d-sm-block'>\r\n              <div className='col-lg-9 col-md-12 col-12'style={{marginTop: -100 + 'px'}}>\r\n                <img className='img-fluid' alt={data.name} src={data.poster} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      {mode === 'EDIT' &&\r\n        <div className='container'>\r\n          <h1 className='mt-4 text-secondary'>Editar Série</h1>\r\n          <h2 className='mt-3 text-secondary'>{data.name}</h2>\r\n          <form className='mb-5'>\r\n            <div className='row'>\r\n              <div className=\"form-group col-12 col-md-6\">\r\n                <label htmlFor='name'>Nome:</label>\r\n                <input type='text' value={form.name} onChange={onChange('name')} className='form-control' id='name' placeholder='Nome da Série' />\r\n              </div>\r\n              <div className=\"form-group col-12 col-md-6\">\r\n                <label htmlFor='name'>Comentários:</label>\r\n                <input type='text' value={form.comments} onChange={onChange('comments')} className='form-control' id='name' placeholder='Comentários' />\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='form-group col-12 col-md-4'>\r\n                <label htmlFor='name'>Gênero</label>\r\n                <select className='form-control' onChange={onChangeGenre} value={genreId}>\r\n                  {genres.map(genre => <option key={genre.id} value={genre.id}>{genre.name}</option>)}\r\n                </select>\r\n              </div>\r\n              <div className='col-12 col-md-3'>\r\n                <div className='form-check'>\r\n                  <input className='form-check-input' type='radio' checked={form.status === 'Assistido'} name='status' id='assistido' value='Assistido' onChange={seleciona('Assistido')} />\r\n                  <label className='form-check-label' htmlFor='assistido'>Assistido</label>\r\n                </div>\r\n                <div className='form-check'>\r\n                  <input className='form-check-input' type='radio' checked={form.status === 'Assistindo'} name='status' id='Assistindo' value='assistindo' onChange={seleciona('Assistindo')} />\r\n                  <label className='form-check-label' htmlFor='Assistindo'>Assistindo</label>\r\n                </div>\r\n                <div className='form-check'>\r\n                  <input className='form-check-input' type='radio' checked={form.status === 'Para assitir'} name='status' id='paraAssistir' value='Para assitir' onChange={seleciona('Para assitir')} />\r\n                  <label className='form-check-label' htmlFor='paraAssistir'>Para assistir</label>\r\n                </div>\r\n              </div>\r\n              <div className='col-12 col-md-5 mt-4'>\r\n                <button type='button' onClick={save} className='btn btn-primary mr-3'>Salvar</button>\r\n                <button onClick={() => setMode('INFO')} className='btn btn-danger'>Cancelar Edição</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoSerie","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst EditGenre = ({match}) => {\r\n    const [name, setName] = useState('')\r\n    const [success, setSuccess] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        axios.get('/api/genres/' + match.params.id)\r\n        .then(res => {\r\n            setName(res.data.name)\r\n        })\r\n    }, [match.params.id])\r\n\r\n    const onChange = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n    const save = () => {\r\n        axios.put('/api/genres/' + match.params.id, {\r\n            name \r\n        }).then(res => setSuccess(true)\r\n        )\r\n    }\r\n      if(success){\r\n        return <Redirect to='/genres' />\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1>Editar Gênero</h1>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='name'>Gênero</label>\r\n                    <input type='text' value={name} onChange={onChange} className='form-control' id='name' placeholder='Nome do Gênero' />\r\n                </div>\r\n                <button type='button' onClick={save} className='btn btn-primary'>Salvar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditGenre","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Genres from './Genres'\nimport Series from './Series'\nimport NewGenres from './NewGenres'\nimport NewSerie from './NewSerie'\nimport InfoSerie from './InfoSerie'\nimport EditGenre from './EditGenre'\n\nconst homeCover = {\n  minHeight: '600px',\n  backgroundImage: 'url(https://wallpapercave.com/wp/wp1839581.jpg)',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  backgroundRepeat: 'no-repeat',\n  opacity: 0.8,\n  color: '#fff'\n}\n\nconst Home = () => {\n  return (\n    <div style={homeCover}>\n      <div className='container'>\n        <div className='pt-5'>\n          <h1 className='mt-5'>My Series App</h1>\n          <h3 className='mt-3'>Gerencie as séries que você mais curte!</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/series' exact component={Series} />\n          <Route path='/genres' exact component={Genres} />\n          <Route path='/genres/new' exact component={NewGenres} />\n          <Route path='/serie/new' exact component={NewSerie} />\n          <Route path='/genres/:id' exact component={EditGenre} />\n          <Route path='/series/:id' exact component={InfoSerie} />\n        </Switch>\n        <Footer className='row h-100 align-items-center h-100'></Footer>\n      </div>\n    </Router>\n\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}